
1. public class Q1 {
    
    public static void findJumpingWays(int N){
        int [] num = new int[100];
        num[0]= 1;
        num[1] = 1;
        num [2] = 2;
            for(int i=3; i<=N;i++){
                num[i] = num[i-1] + num [i-2];
            }
            System.out.println(num[N]);
    }
    public static void main(String[] args){
        Scanner input = new Scanner(System.in);
        System.out.println("number of rock: ");
        int number = input.nextInt();
        
        findJumpingWays(number);
    }
    
}
2. 
3. public class Interview {
        /**
     * @param args the command line arguments
     */
    
    public static void main(String[] args) {
        String x = "aaaaanaapaaa";
            int[] num = new int[10];
            int count =0;
        for(int i = 0; i<x.length()-2;i++){
            if(x.charAt(i)== x.charAt(i+1) && x.charAt(i)== x.charAt(i+2)){
               num[count]= i;
              count++;
            }
        }
        for(int j = 0; j<= count;j++){
        System.out.print(num[j]+", ");
        }
    }
    
}
4. public class Q4 {    
    public static void main(String[] args) {
        String[] words = {"zero", "real", "name", "zero", "help", "hero", "real", "none", "real"};
        findWordWithfrequency (3,words);
    }
    
    public static void findWordWithfrequency (int N, String[] wordList){
        for (int i=0; i<N; i++) {
            System.out.print (wordList [i]+ " , ");
        }
    }   

5. – There is no object identifier class in the code for object specification
 - there is a new class needed for the object creation for fish and bird objects
Ex: 
public class testObject {
    public static void main(String[]args) {
        Fish fish = new Fish();
        fish.swim();
        fish.walk();
        fish.fly();

      Bird bird = new Bird();
        bird.fly();
        bird.swim();
    }



7. Yes, when the fork() is called, the all of copy process in parent go to the child, although it goes to separate memory location in child.
8.No, it is not correct. In multi threading, threa in within the process share the same memory and open files. Therefore, each thread can’t  be protected from other thread in terms of the memory protection. 
9. No, the virtual address size and physical is different, Address translation hardware in the CPU, often referred to as a memory management unit (MMU), automatically translates virtual addresses to physical addresses. Software within the operating system may extend these capabilities to provide a virtual address space that can exceed the capacity of real memory and thus reference more memory than is physically present in the computer.
10. overloading method is the complie time concept. It has method which has the same method but different parameter in one class
As for overidding is the run time concept method which has the same method name,parameter and return type. This can occur in parent and child class.
Moreover, polumorphism can apply with overriding.

For example:
-	Overriding
Class Plant{
public void color(){
System.out.println(“green”);
}
}

Class rose extends Plant{
public void color(){
System.out.println(red);
}
}

-	Overloading:
Class Allowance{
Public void allowance(){
System.out.println(“RM 10 per day”);
}

Public void allowance(int days){
Int money = 10 * days;
System,out.println(money);
}
